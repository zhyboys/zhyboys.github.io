(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{562:function(s,n,t){"use strict";t.r(n);var a=t(42),e=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("内部类的特点：")]),s._v(" "),t("ol",[t("li",[s._v("可以直接访问外部类的所有数据，包括私有数据。")]),s._v(" "),t("li",[s._v("内部类提供了更好的封装，可以把内部类隐藏在外部类之内，不允许同一个包中的其他类访问该类。")])]),s._v(" "),t("p",[s._v("内部类有：")]),s._v(" "),t("ul",[t("li",[s._v("成员内部类")]),s._v(" "),t("li",[s._v("方法内部类")]),s._v(" "),t("li",[s._v("静态内部类")]),s._v(" "),t("li",[s._v("匿名内部类")])]),s._v(" "),t("h2",{attrs:{id:"成员内部类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#成员内部类"}},[s._v("#")]),s._v(" 成员内部类")]),s._v(" "),t("p",[s._v("外部类不能直接访问内部类的成员和方法，就像一个普通类不能直接访问另一个普通类的成员和方法一样，如果想要访问可以先创建一个==内部类对象==，然后通过内部类对象来访问。\n==此处创建内部类对象有特别之处，请参考下面例子 内部类 对象名 = 外部类对象.new 内部类( );==")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('//外部类HelloWorld\npublic class HelloWorld {\n    \n    // 内部类Inner，类Inner在类HelloWorld的内部\n    public class Inner {\n        \n\t\t// 内部类的方法\n\t\tpublic void show() {\n\t\t\tSystem.out.println("welcome to imooc!");\n\t\t}\n\t}\n    \n\tpublic static void main(String[] args) {\n\t//show();//直接访问会报错\n        \n        // 创建外部类对象\n\t\tHelloWorld hello = new HelloWorld();\n        // 创建内部类对象\n\t\tInner i = hello.new Inner();\n        // 调用内部类对象的方法\n\t\ti.show();\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br")])]),t("p",[s._v("如果外部类和内部类具有相同的成员变量或方法，内部类默认访问自己的成员变量或方法，如果要访问外部类的成员变量，可以使用 this 关键字。如：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('//外部类Outer\npublic class Outer {\n    int b=1;//外部类中的成员属性b\n    //内部类Inner\n    public class Inner{\n        int b=2;//内部类成员属性b\n        public void test(){\n            System.out.println("访问外部类中的b："+Outer.this.b);\n            System.out.println("访问内部类中的b："+b);\n     }\n    }\n    }\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("访问外部类中的b：1\n访问内部类中的b：2\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"静态内部类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态内部类"}},[s._v("#")]),s._v(" 静态内部类")]),s._v(" "),t("ol",[t("li",[s._v("静态内部类不能直接访问外部类的非静态成员，但可以通过"),t("strong",[s._v("new（）外部类.成员")]),s._v("的方式访问")]),s._v(" "),t("li",[s._v("如果外部类的静态成员与内部类的成员名称相同，可通过"),t("strong",[s._v("类名.静态成员")]),s._v("访问外部类的静态成员；如果外部类的静态成员与内部类的静态成员名称不相同，则可通过"),t("strong",[s._v("成员名")]),s._v("直接调用外部类的静态成员。")]),s._v(" "),t("li",[s._v("创建静态内部类对象时，不需要外部类对象，可以直接创建"),t("strong",[s._v("内部类 对象名=new 内部类（）；")])])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('package 内部类;\n\npublic class SOuter {\n\tprivate int a=99;//外部类的私有变量\n\tstatic int b=1;//外部类的静态变量\n\t//静态内部类\n\tpublic static class SInner{\n\t\tint b =2;//内部类变量\n\t\tpublic void test(){\n\t\t\tSystem.out.println("访问外部类中的b："+SOuter.b);\n\t\t\tSystem.out.println("访问内部类中的b："+b);\n\t\t}\n\t}\n\t//测试静态内部类\n\tpublic static void main (String[] args){\n\t\tSInner si = new SInner();//直接创建内部类对象\n\t\tsi.test();//调用test方法\n\t}\n}\n\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("p",[s._v("运行结果：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("访问外部类中的b：1\n访问内部类中的b：2\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"方法内部类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法内部类"}},[s._v("#")]),s._v(" 方法内部类")]),s._v(" "),t("p",[s._v("方法内部类就是内部类定义在外部类的方法中，方法内部类只在该方法的内部可见，即只在该方法内部可以使用。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('package 内部类;\n//外部类\npublic class MOuter {\n\t//外部类中的方法\n\tpublic void show(){\n\t\tfinal int a=25;//常量\n\t\tint b=13;//变量\n\t\t//方法内部类\n\t\tclass MInner{\n\t\t\tint c=2;//内部类中的变量\n\t\t\tpublic void print(){\n\t\t\t\tSystem.out.println("访问内部类的方法常量a："+a);\n\t\t\t\tSystem.out.println("访问内部类中的变量c："+c);\n\t\t\t}\n\t\t}//内部类的后括号\n\t\tMInner mi =new MInner();//创建内部类对象\n\t\tmi.print();//调用内部类的方法\n\t}\n\t//测试方法内部类\n\tpublic static void main(String[] args) {\n\t\tMOuter mo = new MOuter();//创建外部类对象\n\t\tmo.show();//调用外部类方法\n\t}\n}\n\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br")])]),t("p",[s._v("运行结果：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("访问内部类的方法常量a：25\n访问内部类中的变量c：2\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h5",{attrs:{id:"注意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[s._v("#")]),s._v(" 注意：")]),s._v(" "),t("p",[s._v("由于方法内部类不能再外部类的方法以外的地方使用，因此方法内部类不能使用访问控制符和statc修饰。")])])}),[],!1,null,null,null);n.default=e.exports}}]);