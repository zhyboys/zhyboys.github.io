(window.webpackJsonp=window.webpackJsonp||[]).push([[253],{676:function(t,v,a){"use strict";a.r(v);var _=a(42),s=Object(_.a)({},(function(){var t=this,v=t.$createElement,a=t._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),a("h2",{attrs:{id:"_01整型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_01整型"}},[t._v("#")]),t._v(" 01整型")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("字节")]),t._v(" "),a("th",[t._v("范围(有符号)")]),t._v(" "),a("th",[t._v("范围(无符号)")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("TINYINT")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",[t._v("-2^7^~2^7^-1")]),t._v(" "),a("td",[t._v("0~2^8^-1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("SMALLINT")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),a("td",[t._v("-2^15^~2^15^-1")]),t._v(" "),a("td",[t._v("0~2^16^-1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("MEDIUMINT")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),a("td",[t._v("-2^23^~2^23^-1")]),t._v(" "),a("td",[t._v("0~2^24^-1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("INT")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),a("td",[t._v("-2^31^~2^31^-1")]),t._v(" "),a("td",[t._v("0~2^32^-1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("BIGINT")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("8")]),t._v(" "),a("td",[t._v("-2^63^~2^63^-1")]),t._v(" "),a("td",[t._v("0~2^64^-1")])])])]),t._v(" "),a("p",[t._v("关于范围的计算方法：比如tinyint，有1个字节，一个字节是8位。计算有符号的范围，8位有一个是符号位，剩下的7位每一位有0和1两种取值，代表2的7次方128个数，正数128，负数128个。但是为了取出一个0，正数就少了1。所以是127个正数和一个零。无符号计算，1字节有8位，代表2的8次方256个数，就是从0~255。其他同理。")]),t._v(" "),a("h3",{attrs:{id:"小知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小知识"}},[t._v("#")]),t._v(" 小知识：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("如果你定义一个字段的数据类型是int(3)那么是不是说，插入的数据最大不能超过三位数呢？")]),t._v(" "),a("p",[t._v("其实不是的，你仍然可以插入更大的数，最大范围仍是上表中int的范围没有变。int(3)中的3是显示位数，意思是查询时，显示3位数，不足三位补零，若想最前面的零也显示，要配合"),a("strong",[t._v("关键词zerofill")]),t._v("的使用。")]),t._v(" "),a("p",[t._v("例如：定义score时 "),a("code",[t._v("score int(3) zerofill")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("无符号数据类型怎么定义？")]),t._v(" "),a("p",[t._v("比如声明score时 "),a("code",[t._v("score int unsigned")])])])]),t._v(" "),a("h2",{attrs:{id:"_02浮点型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_02浮点型"}},[t._v("#")]),t._v(" 02浮点型")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("浮点型")]),t._v(" "),a("th",[t._v("占用字节")]),t._v(" "),a("th",[t._v("范围")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("float（单精度）")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("-3.4E+38~3.4E+38")])]),t._v(" "),a("tr",[a("td",[t._v("double（双精度）")]),t._v(" "),a("td",[t._v("8")]),t._v(" "),a("td",[t._v("-1.8E+308~1.8E+308")])])])]),t._v(" "),a("p",[t._v("浮点数声明：")]),t._v(" "),a("blockquote",[a("p",[t._v("float(M,D)")]),t._v(" "),a("p",[t._v("double(M,D)")])]),t._v(" "),a("p",[t._v("​\t\tM：总位数。插入的值总位数超过M会报错。")]),t._v(" "),a("p",[t._v("​\t\tD：小数位数，插入的值小数位数超过D不会报错，四舍五入处理。")]),t._v(" "),a("p",[t._v("注意点：浮点型存的是近似值，精度有可能会丢失。例：")]),t._v(" "),a("div",{staticClass:"language-MySQL line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("create table nu(\nnum double(20,19)\n);\n\ninsert into values (1.1234567890123456789);\n\nselect * from nu ;#你会发现数变了，最后几个变成了0\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h2",{attrs:{id:"_03定点数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_03定点数"}},[t._v("#")]),t._v(" 03定点数")]),t._v(" "),a("blockquote",[a("p",[t._v("decimal(M,D)")])]),t._v(" "),a("p",[t._v("说明：")]),t._v(" "),a("ol",[a("li",[t._v("定点数用于保存你要严格保存的数据，精度不会丢失，例如存款。")]),t._v(" "),a("li",[t._v("定点数是变长的，大概每9个数字用4个字节来存储，定点之所以能保存精确的小数，是因为整数和小数是分开储存的，占用资源要比浮点数多。")]),t._v(" "),a("li",[a("strong",[t._v("整型、定点数和浮点数都支持显示宽度(zerofill)和无符号数(unsigned)")]),t._v("。")])]),t._v(" "),a("h2",{attrs:{id:"_04字符型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_04字符型"}},[t._v("#")]),t._v(" 04字符型")]),t._v(" "),a("p",[t._v("数据库中，所有字符型只能用单引号。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("数据类型")]),t._v(" "),a("th",[t._v("描述")]),t._v(" "),a("th",[t._v("长度")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("char(长度)")]),t._v(" "),a("td",[t._v("定长")]),t._v(" "),a("td",[t._v("最大255")])]),t._v(" "),a("tr",[a("td",[t._v("varchar(长度)")]),t._v(" "),a("td",[t._v("变长")]),t._v(" "),a("td",[t._v("最大65535")])]),t._v(" "),a("tr",[a("td",[t._v("tintext")]),t._v(" "),a("td",[t._v("大段文本")]),t._v(" "),a("td",[t._v("2^8^-1=255")])]),t._v(" "),a("tr",[a("td",[t._v("text")]),t._v(" "),a("td",[t._v("大段文本")]),t._v(" "),a("td",[t._v("2^16^-1=65535")])]),t._v(" "),a("tr",[a("td",[t._v("mediumtext")]),t._v(" "),a("td",[t._v("大段文本")]),t._v(" "),a("td",[t._v("2^24^-1")])]),t._v(" "),a("tr",[a("td",[t._v("longtext")]),t._v(" "),a("td",[t._v("大段文本")]),t._v(" "),a("td",[t._v("2^32^-1")])])])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("char(10)和varchar(10)的区别？")]),t._v(" "),a("p",[t._v("答：相同点：他们最多只能保存10个字符。")]),t._v(" "),a("p",[t._v("​\t\t不同点：char不回收多余的长度（定长），效率高，浪费空间；")]),t._v(" "),a("p",[t._v("​\t\t\t\t\t\tvarchar回收对于的空间（变长），效率低，节省空间。")])]),t._v(" "),a("li",[a("p",[t._v("varchar理论最大长度是65535字节，实际却达不到，具体长度与字符编码有关。")]),t._v(" "),a("p",[t._v("例gbk编码 , 一个字符占用2字节 , 则varchar最大长度是32767.")]),t._v(" "),a("p",[t._v("utf8编码中 , 一个字符占用3字节 , 则varchar最大长度是21845")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("一条完整数据")]),t._v("（比如一个表有id，姓名，性别。三者合在一起算一条完整数据）"),a("strong",[t._v("总长度不能超过65535字节")]),t._v("。验证：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("create table t7(\nname varchar(21844), #utf8下最多能存21845字符，每个字符3字节\nage tinyint \n) charset = utf8;\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("上述例子会报错，是因为utf8下，varchar最大存21845字符（65535字节），外加tinyint，字节总长度超过了65535，所以会报错。")])]),t._v(" "),a("li",[a("p",[t._v("保存大块文本用了text，总数据长度不就超过了65535字节了？为什么不报错？")]),t._v(" "),a("p",[t._v("答：事实上，大块文本（text）不计算在总长度中，一个大块文本只用10个字节保存文本地址，文本另存他处。")])])]),t._v(" "),a("h2",{attrs:{id:"_05枚举"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_05枚举"}},[t._v("#")]),t._v(" 05枚举")]),t._v(" "),a("blockquote",[a("p",[t._v("enum('A','B')")]),t._v(" "),a("p",[t._v("声明举例：sex enum('男 ','女 ')")])]),t._v(" "),a("p",[t._v("说明：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("枚举相当于一个集合，值只能从集合中选一个，值选非集合内的会报错。")])]),t._v(" "),a("li",[a("p",[t._v("枚举类型是通过整数来管理的，第一个值是1，第二个值是2，以此类推。验证与应用：")]),t._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("create table t8(\nname varchar(10),\nsex enum('男','女')\n);\n# --------------------\ninsert into t8 values \n('Tom','男')，\n('Jerry',1)，   # 与第七行等效\n('Rose','女')；\n# --------------------\n#再次表明枚举是数字，只有数字才能相加，结果也是数字。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])])])]),t._v(" "),a("p",[t._v("select sex+0 from t8;\nselect sex   from t8;")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n3. 枚举的优点：\n\n1. 运行速度快（数字比字符串运算速度快）。\n2. 限制数据。\n3. 节省空间（一个数字就够了，省空间）。\n\n## 06集合\n\n> set \n>\n> set('爬山 ','游泳 ','读书 ')\n\n集合相当于多项选择；**每一个集合都分配一个固定的数字，分配方式从左往右，按2^0^ , 2^1^ , 2^2^ , 2^3^**……例子中，爬山是2^0^=1；游泳是2^1^=2；读书是2^2^=4。如果你插入时，选择了爬山和读书，那么结果就是5（4+1）。\n\n例子：\n\n```mysql\ncreate table t9(\nhobby set('爬山','游泳','读书')\n);\n# 证明是数字\ninsert into t9 values ('爬山','读书');\nselect hobby+0 from t9;\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br")])]),a("p",[a("strong",[t._v("无论按照什么顺序插入，其显示结果都是按照建表时的固定顺序显示的")]),t._v("，例如你插入时 "),a("code",[t._v("insert into t9 values ('读书','爬山');")]),t._v("，但是显示结果仍然是你建表时的顺序，先显示“爬山”，再显示“读书”。")]),t._v(" "),a("h2",{attrs:{id:"_07日期类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_07日期类型"}},[t._v("#")]),t._v(" 07日期类型")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("数据类型")]),t._v(" "),a("th",[t._v("占用字节")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("datetime")]),t._v(" "),a("td",[t._v("8")]),t._v(" "),a("td",[t._v("日期时间")])]),t._v(" "),a("tr",[a("td",[t._v("date")]),t._v(" "),a("td",[t._v("3")]),t._v(" "),a("td",[t._v("日期")])]),t._v(" "),a("tr",[a("td",[t._v("time")]),t._v(" "),a("td",[t._v("3")]),t._v(" "),a("td",[t._v("时间")])]),t._v(" "),a("tr",[a("td",[t._v("timestamp")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("时间戳")])]),t._v(" "),a("tr",[a("td",[t._v("year")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("年份")])])])]),t._v(" "),a("p",[t._v("一般比较常用的也就前两个。")]),t._v(" "),a("p",[t._v("datetime的插入格式：")]),t._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("insert into uu values ('2015-10-12 10:00:00');\n# 日期与时间插入，在上面括号内的基础上取你所需。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("注意点：")]),t._v(" "),a("ol",[a("li",[t._v("timestamp类型和datetime类型的形式是一样的，区别是datetime的范围是1~9999年，而timestamp是从"),a("code",[t._v("1970-01-01 00:00:00")]),t._v(" ~ "),a("code",[t._v("2038-1-19 11:14:07")]),t._v("。")]),t._v(" "),a("li",[t._v("year只占用一个字节，所以只能储存255个年份，范围是1901 ~ 2155。")]),t._v(" "),a("li",[t._v("time表示时间或时间间隔，范围是 -838:59:59 ~ 838:59:59。")]),t._v(" "),a("li",[a("strong",[t._v("其他编程语言的时间戳与数据库的时间戳有区别")]),t._v("，其他编程语言时间戳是从1970年1月1日0时0分0秒到现在的总秒数或总毫秒数，是整数。但是数据库时间戳不是秒数，形式与datatime差不多，有日期，时分秒。")])]),t._v(" "),a("h2",{attrs:{id:"_08布尔型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_08布尔型"}},[t._v("#")]),t._v(" 08布尔型")]),t._v(" "),a("p",[t._v("boolean型中true和false对应0和1；以数字的方式储存。")]),t._v(" "),a("h2",{attrs:{id:"_09数据类型小测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_09数据类型小测试"}},[t._v("#")]),t._v(" 09数据类型小测试")]),t._v(" "),a("ol",[a("li",[t._v("手机号：char")]),t._v(" "),a("li",[t._v("电话号：varchar")]),t._v(" "),a("li",[t._v("性别：char enum")]),t._v(" "),a("li",[t._v("学生年龄：tinyint unsigned")]),t._v(" "),a("li",[t._v("薪水：dicimal")]),t._v(" "),a("li",[t._v("照片：binary，但一般不把照片存数据库，如果照片几百兆，数据库才几百兆，数据库直接就满了。一般在数据库存照片地址。但出题这样出，还是要选binary。")])])])}),[],!1,null,null,null);v.default=s.exports}}]);