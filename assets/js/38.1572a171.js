(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{454:function(s,n,a){"use strict";a.r(n);var e=a(42),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"函数注意点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数注意点"}},[s._v("#")]),s._v(" 函数注意点")]),s._v(" "),a("p",[a("strong",[s._v("大部分很简单，只需看加粗重点")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("一个函数可以有形参，也可以没有形参。（零个或多个）")]),s._v(" "),a("ol",[a("li",[s._v("形参：定义函数函数()中的变量我们就称之为形参。形参的目的是接收实参，形参变量只有在被调用时才分配内存单元，调用结束时释放内存。")]),s._v(" "),a("li",[s._v("实参：调用函数时传入的数据我们就称之为实参。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function say(){\n//没有形参的函数\nconsole.log('hello');\n}\n\nfunction say(name){\n//有形参的函数\nconsole.log(name);\n}\n\nlet he = 'xiaoming';\nsay(he);//he是实参\nsay('libai')//'libai'也是实参\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("一个函数可以有返回值也可以没有返回值。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function say(a,b){\n//有返回值的函数\nreturn a+b;\n}\n\nfunction say(a,b){\n//无返回值的函数\nconsole.log(a+b);\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("函数"),a("strong",[s._v("没有通过return明确返回值")]),s._v("（没写return或只写了return，return后没写别的），"),a("strong",[s._v("默认返回undefined")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function say(a,b){\nconsole.log(a+b);\nreturn;//undefined\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("return的作用和break相似，所以return后面不能编写任何语句（永远执行不到）。")]),s._v(" "),a("ol",[a("li",[s._v("break：立即结束switch语句或循环语句。")]),s._v(" "),a("li",[s._v("return：立即结束当前所在函数。")])])]),s._v(" "),a("li",[a("p",[s._v("调用函数时，"),a("strong",[s._v("实参的个数可以和形参的个数不相同")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function getSum(a, b){\n\treturn a+b;\n}\n\nlet res = getSum(1, 2);//实参形参个数相同\nlet res = getSum(1);//实参形参个数不同，b=undefined，不报错\nlet res = getSum(1, 2, 3)//实形参个数不同，a=1,b=2, 不报错\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("js中的"),a("strong",[s._v("函数")]),s._v("和数组一样，都是引用数据类型（对象类型）")]),s._v(" "),a("p",[a("strong",[s._v("既然是一种数据类型，所以一也可以保存到一个变量中")])]),s._v(" "),a("p",[s._v("可以通过变量名找到并执行函数。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('let say = function(){\n\tconsole.log("hello!");\n}\n\nsay();//通过变量名找到并执行函数\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])])])])}),[],!1,null,null,null);n.default=t.exports}}]);